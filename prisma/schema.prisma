generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String
  bio           String?
  createdAt     DateTime       @default(now())
  followers     Follow[]       @relation("followee")
  follows       Follow[]       @relation("follower")
  notifications Notification[] @relation("NotificationToUser")
  posts         Post[]
  reactions     Reaction[]
}

model Follow {
  id         String   @id @default(cuid())
  followerId String
  followeeId String
  createdAt  DateTime @default(now())
  followee   User     @relation("followee", fields: [followeeId], references: [id])
  follower   User     @relation("follower", fields: [followerId], references: [id])

  @@unique([followerId, followeeId])
}

model Post {
  id        String     @id @default(cuid())
  authorId  String
  content   String
  createdAt DateTime   @default(now())
  author    User       @relation(fields: [authorId], references: [id])
  reactions Reaction[]
}

model Reaction {
  id        String   @id @default(cuid())
  postId    String
  userId    String
  type      String
  text      String?
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Notification {
  id         String   @id @default(cuid())
  userId     String
  type       String
  actorId    String
  objectType String?
  objectId   String?
  text       String
  createdAt  DateTime @default(now())
  read       Boolean  @default(false)
  aiScore    Float?
  meta       Json?
  user       User     @relation("NotificationToUser", fields: [userId], references: [id])

  @@index([userId, createdAt])
  @@index([userId, read])
}
